#
# BPM database file
#
# Authors: Lucas Russo
#
# Created Oct. 10, 2016
#

#######################################
# Amplitude and phase compensation
#######################################

record(longout,"$(P)$(R)ADC$(ADC_CHAN)TestMode"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set ISLA216P25 test mode")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_TEST_MODE")
}

# Not implemented yet
#record(longin,"$(P)$(R)ADC$(ADC_CHAN)TestMode-RB"){
#    field(DTYP,"asynUInt32Digital")
#    field(DESC,"get ISLA216P25 test mode")
#    field(PINI,"YES")
#    field(SCAN,"I/O Intr")
#    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_TEST_MODE")
#}

record(mbbo,"$(P)$(R)ADC$(ADC_CHAN)RstModes"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set ISLA216P25 reset mode")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_RST_MODES")
    field(NOBT,"2")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(ZRST,"pin control")
    field(ONST,"normal")
    field(TWST,"nap")
    field(THST,"sleep")
}

# Not implemented yet
#record(mbbi,"$(P)$(R)ADC$(ADC_CHAN)RstModes-RB"){
#    field(DTYP,"asynUInt32Digital")
#    field(DESC,"get ISLA216P25 reset mode")
#    field(PINI,"YES")
#    field(SCAN,"I/O Intr")
#    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_RST_MODES")
#    field(NOBT,"2")
#    field(ZRVL,"0")
#    field(ONVL,"1")
#    field(TWVL,"2")
#    field(THVL,"3")
#    field(ZRST,"pin control")
#    field(ONST,"normal")
#    field(TWST,"nap")
#    field(THST,"sleep")
#}

record(longin,"$(P)$(R)ADC$(ADC_CHAN)Temp-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get ISLA216P25 temperature code")
    field(PINI,"YES")
    field(SCAN,"5 second")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_TEMP")
}

record(longin,"$(P)$(R)ADC$(ADC_CHAN)CalStatus-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get ISLA216P25 calibration status")
    field(PINI,"YES")
    field(SCAN,"2 second")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_CAL_STATUS")
}

record(mbbo, "$(P)$(R)ADC$(ADC_CHAN)RegRead"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set ADC register read")
    field(PINI,"YES")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_REG_READ")
    field(SCAN,"Passive")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"nothing")
    field(ONST,"read")
}

record(mbbi, "$(P)$(R)ADC$(ADC_CHAN)RegRead-RB"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get ADC register read status")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_REG_READ")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"nothing")
    field(ONST,"read")
}

record(longin,"$(P)$(R)ADC$(ADC_CHAN)RegReadData-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Get data from ADC register")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_REG_READ_DATA")
}

record(longout,"$(P)$(R)ADC$(ADC_CHAN)RegReadAddr"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Set addr to be read to ADC")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_REG_READ_ADDR")
}

record(longin,"$(P)$(R)ADC$(ADC_CHAN)RegReadAddr-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Get addr to be read to ADC")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_REG_READ_ADDR")
}

record(mbbo, "$(P)$(R)ADC$(ADC_CHAN)RegWrite"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set ADC register write")
    field(PINI,"YES")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_REG_WRITE")
    field(SCAN,"Passive")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"nothing")
    field(ONST,"write")
}

record(mbbi, "$(P)$(R)ADC$(ADC_CHAN)RegWrite-RB"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get ADC register write status")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_REG_WRITE")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"nothing")
    field(ONST,"write")
}

record(longout,"$(P)$(R)ADC$(ADC_CHAN)RegWriteData"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Set data to be written to ADC")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_REG_WRITE_DATA")
}

record(longin,"$(P)$(R)ADC$(ADC_CHAN)RegWriteData-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Get data to be written to ADC")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_REG_WRITE_DATA")
}

record(longout,"$(P)$(R)ADC$(ADC_CHAN)RegWriteAddr"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Set addr to be written to ADC")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_REG_WRITE_ADDR")
}

record(longin,"$(P)$(R)ADC$(ADC_CHAN)RegWriteAddr-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Get addr to be written to ADC")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ADC_REG_WRITE_ADDR")
}
