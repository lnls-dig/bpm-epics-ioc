#
# BPM interlock database file
#

# Interlock control

record(bo,"$(P)$(R)IntlkEn-Sel"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set interlock enable")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(OUT,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_EN")
}

record(bi,"$(P)$(R)IntlkEn-Sts"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock enable")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_EN")
}

record(bo,"$(P)$(R)IntlkClr-Cmd"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set interlock clear")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(HIGH, "1")
    field(OUT,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_CLR")
}

record(bo,"$(P)$(R)IntlkMinSumEn-Sel"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set interlock min. sum enable")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(OUT,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_MIN_SUM_EN")
}

record(bi,"$(P)$(R)IntlkMinSumEn-Sts"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock min. sum enable")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_MIN_SUM_EN")
}

record(bo,"$(P)$(R)IntlkPosEn-Sel"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set interlock pos. enable")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(OUT,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_EN")
}

record(bi,"$(P)$(R)IntlkPosEn-Sts"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock pos. enable")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_EN")
}

record(bo,"$(P)$(R)IntlkPosClr-Cmd"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set interlock pos. clear")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(HIGH, "1")
    field(OUT,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_CLR")
}

record(bo,"$(P)$(R)IntlkAngEn-Sel"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set interlock ang. enable")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(OUT,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_EN")
}

record(bi,"$(P)$(R)IntlkAngEn-Sts"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock ang. enable")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_EN")
}

record(bo,"$(P)$(R)IntlkAngClr-Cmd"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set interlock ang. clear")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(HIGH, "1")
    field(OUT,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_CLR")
}

# Interlock bigger status

record(bi,"$(P)$(R)IntlkPosUpperX-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. pos. X")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_BIGGER_X")
}

record(bi,"$(P)$(R)IntlkPosUpperY-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. pos. Y")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_BIGGER_Y")
}

record(bi,"$(P)$(R)IntlkPosUpperLtcX-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. pos. latched X")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_BIGGER_LTC_X")
}

record(bi,"$(P)$(R)IntlkPosUpperLtcY-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. pos. latched Y")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_BIGGER_LTC_Y")
}

record(bi,"$(P)$(R)IntlkPosUpper-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. pos.")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_BIGGER")
}

record(bi,"$(P)$(R)IntlkPosUpperLtc-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. pos. latched")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_BIGGER_LTC")
}

record(bi,"$(P)$(R)IntlkAngUpperX-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. ang. X")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_BIGGER_X")
}

record(bi,"$(P)$(R)IntlkAngUpperY-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. ang. Y")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_BIGGER_Y")
}

record(bi,"$(P)$(R)IntlkAngUpperLtcX-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. ang. latched X")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_BIGGER_LTC_X")
}

record(bi,"$(P)$(R)IntlkAngUpperLtcY-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. ang. latched Y")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_BIGGER_LTC_Y")
}

record(bi,"$(P)$(R)IntlkAngUpper-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. ang.")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_BIGGER")
}

record(bi,"$(P)$(R)IntlkAngUpperLtc-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip max. ang. latched")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_BIGGER_LTC")
}

# Interlock smaller status

record(bi,"$(P)$(R)IntlkPosLowerX-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. pos. X")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_SMALLER_X")
}

record(bi,"$(P)$(R)IntlkPosLowerY-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. pos. Y")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_SMALLER_Y")
}

record(bi,"$(P)$(R)IntlkPosLowerLtcX-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. pos. latched X")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_SMALLER_LTC_X")
}

record(bi,"$(P)$(R)IntlkPosLowerLtcY-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. pos. latched Y")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_SMALLER_LTC_Y")
}

record(bi,"$(P)$(R)IntlkPosLower-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. pos.")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_SMALLER")
}

record(bi,"$(P)$(R)IntlkPosLowerLtc-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. pos. latched")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_TRANS_SMALLER_LTC")
}

record(bi,"$(P)$(R)IntlkAngLowerX-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. ang. X")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_SMALLER_X")
}

record(bi,"$(P)$(R)IntlkAngLowerY-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. ang. Y")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_SMALLER_Y")
}

record(bi,"$(P)$(R)IntlkAngLowerLtcX-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. ang. latched X")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_SMALLER_LTC_X")
}

record(bi,"$(P)$(R)IntlkAngLowerLtcY-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. ang. latched Y")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_SMALLER_LTC_Y")
}

record(bi,"$(P)$(R)IntlkAngLowerAny-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. ang. any")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_SMALLER_ANY")
}

record(bi,"$(P)$(R)IntlkAngLower-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. ang.")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_SMALLER")
}

record(bi,"$(P)$(R)IntlkAngLowerLtc-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip min. ang. latched")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_ANG_SMALLER_LTC")
}

# Interlock general status

record(bi,"$(P)$(R)Intlk-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip")
    field(SCAN, "2 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK")
}

record(bi,"$(P)$(R)IntlkLtc-Mon"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get interlock trip latched")
    field(SCAN, ".1 second")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(INP,  "@asynMask($(PORT),$(ADDR),0x1,$(TIMEOUT))INTLK_LTC")
}


# Interlock limits

record(ao, "$(P)$(R)IntlkLmtMinSum-SP"){
    field(DESC, "Set interlock minimum sum threshold")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(FLNK, "$(P)$(R)IntlkLmtMinSumCalc-SP")
}

# The Sum calculation in the FPGA is done with fixed-point
# arithmetic with 32-bit Sum * 25-bit KSum and we truncate the result
# by taking the 32 MSB. The IOC calculates the same with double-precision
# with 32-bit Sum * 25-bit KSum. This implies a gain different of
# 2^24 between the IOC and FPGA. So, convert the minimum sum limit
# to a number FPGA will understand.
#
# We do the conversion with a float division so we can
# CEIL the result, as for small currents this could be
# important
record(calc, "$(P)$(R)IntlkLmtMinSumCalc-SP"){
    field(DESC, "Interlock minimum sum threshold calc")
    field(SCAN, "Passive")
    field(INPA, "$(P)$(R)IntlkLmtMinSum-SP")
    field(INPB, "24")
    field(CALC, "CEIL(A/2^B)")
    field(FLNK, "$(P)$(R)IntlkLmtMinSumHw-SP")
}

record(longout, "$(P)$(R)IntlkLmtMinSumHw-SP"){
    field(DTYP, "asynInt32")
    field(DESC, "Set interlock minimum sum threshold hw.")
    field(DOL,  "$(P)$(R)IntlkLmtMinSumCalc-SP")
    field(OMSL, "closed_loop")
    field(SCAN, "Passive")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_MIN_SUM")
}

record(longin,  "$(P)$(R)IntlkLmtMinSumHw-RB"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock minimum sum threshold")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_MIN_SUM")
    field(FLNK, "$(P)$(R)IntlkLmtMinSumCalc-RB")
}

# The Sum calculation in the FPGA is done with fixed-point
# arithmetic with 32-bit Sum * 25-bit KSum and we truncate the result
# by taking the 32 MSB. The IOC calculates the same with double-precision
# with 32-bit Sum * 25-bit KSum. This implies a gain different og
# 2^24 between the IOC and FPGA. So, convert the minimum sum limit
# to a number FPGA will understand.
record(calc, "$(P)$(R)IntlkLmtMinSumCalc-RB"){
    field(DESC, "Interlock minimum sum threshold calc")
    field(SCAN, "Passive")
    field(INPA, "$(P)$(R)IntlkLmtMinSumHw-RB")
    field(INPB, "24")
    field(CALC, "A*(2^B)")
    field(FLNK, "$(P)$(R)IntlkLmtMinSum-RB")
}

record(ai, "$(P)$(R)IntlkLmtMinSum-RB"){
    field(DESC, "Get interlock minimum sum threshold")
    field(SCAN, "Passive")
    field(INP,  "$(P)$(R)IntlkLmtMinSumCalc-RB")
}

record(longout, "$(P)$(R)IntlkLmtPosMaxX-SP"){
    field(DTYP, "asynInt32")
    field(DESC, "Set interlock pos. max X threshold")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_TRANS_MAX_X")
}

record(longin,  "$(P)$(R)IntlkLmtPosMaxX-RB"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock pos. max X threshold")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_TRANS_MAX_X")
}

record(longout, "$(P)$(R)IntlkLmtPosMaxY-SP"){
    field(DTYP, "asynInt32")
    field(DESC, "Set interlock pos. max Y threshold")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_TRANS_MAX_Y")
}

record(longin,  "$(P)$(R)IntlkLmtPosMaxY-RB"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock pos. max Y threshold")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_TRANS_MAX_Y")
}

record(longout, "$(P)$(R)IntlkLmtAngMaxX-SP"){
    field(DTYP, "asynInt32")
    field(DESC, "Set interlock ang. max X threshold")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_ANG_MAX_X")
}

record(longin,  "$(P)$(R)IntlkLmtAngMaxX-RB"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock ang. max X threshold")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_ANG_MAX_X")
}

record(longout, "$(P)$(R)IntlkLmtAngMaxY-SP"){
    field(DTYP, "asynInt32")
    field(DESC, "Set interlock ang. max Y threshold")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_ANG_MAX_Y")
}

record(longin,  "$(P)$(R)IntlkLmtAngMaxY-RB"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock ang. max Y threshold")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_ANG_MAX_Y")
}

record(longout, "$(P)$(R)IntlkLmtPosMinX-SP"){
    field(DTYP, "asynInt32")
    field(DESC, "Set interlock pos. min X threshold")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_TRANS_MIN_X")
}

record(longin,  "$(P)$(R)IntlkLmtPosMinX-RB"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock pos. min X threshold")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_TRANS_MIN_X")
}

record(longout, "$(P)$(R)IntlkLmtPosMinY-SP"){
    field(DTYP, "asynInt32")
    field(DESC, "Set interlock pos. min Y threshold")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_TRANS_MIN_Y")
}

record(longin,  "$(P)$(R)IntlkLmtPosMinY-RB"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock pos. min Y threshold")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_TRANS_MIN_Y")
}

record(longout, "$(P)$(R)IntlkLmtAngMinX-SP"){
    field(DTYP, "asynInt32")
    field(DESC, "Set interlock ang. min X threshold")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_ANG_MIN_X")
}

record(longin,  "$(P)$(R)IntlkLmtAngMinX-RB"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock ang. min X threshold")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_ANG_MIN_X")
}

record(longout, "$(P)$(R)IntlkLmtAngMinY-SP"){
    field(DTYP, "asynInt32")
    field(DESC, "Set interlock ang. min Y threshold")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_ANG_MIN_Y")
}

record(longin,  "$(P)$(R)IntlkLmtAngMinY-RB"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock ang. min Y threshold")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))INTLK_ANG_MIN_Y")
}

record(longin,"$(P)$(R)IntlkPosX-Mon"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock X position")
    field(SCAN, ".1 second")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TRANS_X_DIFF")
}
record(longin,"$(P)$(R)IntlkPosY-Mon"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock Y position")
    field(SCAN, ".1 second")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TRANS_Y_DIFF")
}

record(longin,"$(P)$(R)IntlkAngX-Mon"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock X angle")
    field(SCAN, ".1 second")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ANG_X_DIFF")
}
record(longin,"$(P)$(R)IntlkAngY-Mon"){
    field(DTYP, "asynInt32")
    field(DESC, "Get interlock Y angle")
    field(SCAN, ".1 second")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ANG_Y_DIFF")
}
