#########################
# Waveform Acquisition parameters
#########################

record(mbbo, "$(P)$(R)$(ACQ_NAME)BPMMode-Sel"){
    field(DTYP, "asynInt32")
    field(DESC, "Set BPM mode")
    field(OUT,"@asyn($(PORT),$(ADDR),$(TIMEOUT))BPM_MODE")
    field(SCAN,"Passive")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"MultiPass")
    field(ONST,"SinglePass")
}

record(mbbi, "$(P)$(R)$(ACQ_NAME)BPMMode-Sts"){
    field(DTYP, "asynInt32")
    field(DESC, "Get BPM mode")
    field(INP,"@asyn($(PORT),$(ADDR),$(TIMEOUT))BPM_MODE")
    field(SCAN,"I/O Intr")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"MultiPass")
    field(ONST,"SinglePass")
}

record(longout,"$(P)$(R)$(ACQ_NAME)SamplesPre-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Set number of pre samples for waveforms")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_SAMPLES_PRE")
    alias("$(P)$(R)$(ACQ_NAME)NrSamplesPre-SP")
}

record(longin,"$(P)$(R)$(ACQ_NAME)SamplesPre-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Get number of pre samples for waveforms")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_SAMPLES_PRE")
    alias("$(P)$(R)$(ACQ_NAME)NrSamplesPre-RB")
}

record(longout,"$(P)$(R)$(ACQ_NAME)SamplesPost-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Set number of post samples for waveforms")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_SAMPLES_POST")
    alias("$(P)$(R)$(ACQ_NAME)NrSamplesPost-SP")
}

record(longin,"$(P)$(R)$(ACQ_NAME)SamplesPost-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Get number of post samples for waveforms")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_SAMPLES_POST")
    alias("$(P)$(R)$(ACQ_NAME)NrSamplesPost-RB")
}

record(longout,"$(P)$(R)$(ACQ_NAME)Shots-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Set number of shots for waveforms")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_NUM_SHOTS")
    alias("$(P)$(R)$(ACQ_NAME)NrShots-SP")
}

record(longin,"$(P)$(R)$(ACQ_NAME)Shots-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Get number of shots for waveforms")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_NUM_SHOTS")
    alias("$(P)$(R)$(ACQ_NAME)NrShots-RB")
}

record(mbbo, "$(P)$(R)$(ACQ_NAME)Channel-Sel"){
    field(DTYP, "asynInt32")
    field(DESC, "Set acquisition's channel")
    field(PINI,"YES")
    field(OUT,"@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_CHANNEL")
    field(SCAN,"Passive")
    field(NOBT,"3")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(FRVL,"4")
    field(FVVL,"5")
    field(SXVL,"6")
    field(ZRST,"ADC")
    field(ONST,"ADCSwap")
    field(TWST,"TbT")
    field(THST,"FOFB")
    field(FRST,"TbTPha")
    field(FVST,"FOFBPha")
    field(SXST,"Monit1")
}

record(mbbi, "$(P)$(R)$(ACQ_NAME)Channel-Sts"){
    field(DTYP, "asynInt32")
    field(DESC, "Get acquisition's channel")
    field(INP,"@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_CHANNEL")
    field(SCAN,"I/O Intr")
    field(NOBT,"3")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(FRVL,"4")
    field(FVVL,"5")
    field(SXVL,"6")
    field(ZRST,"ADC")
    field(ONST,"ADCSwap")
    field(TWST,"TbT")
    field(THST,"FOFB")
    field(FRST,"TbTPha")
    field(FVST,"FOFBPha")
    field(SXST,"Monit1")
}

# For use with rate seq record defined in FFTRecords.template
record(calc, "$(P)$(R)$(ACQ_NAME)ChannelRateIdx-RB"){
    field(DESC, "get acquisition's channel index")
    field(SCAN,"Passive")
    field(INPA,"$(P)$(R)$(ACQ_NAME)Channel-RB.RVAL CP NMS")
    field(CALC,"A+1")
}

record(mbbo, "$(P)$(R)$(ACQ_NAME)Trigger-Sel"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set acquisition's trigger")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER")
    field(SCAN,"Passive")
    field(NOBT,"2")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(ZRST,"Now")
    field(ONST,"External")
    field(TWST,"Data")
    field(THST,"Software")
    alias("$(P)$(R)$(ACQ_NAME)TriggerType-Sel")
}

record(mbbi, "$(P)$(R)$(ACQ_NAME)Trigger-Sts"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get acquisition's trigger")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER")
    field(SCAN,"I/O Intr")
    field(NOBT,"2")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(ZRST,"Now")
    field(ONST,"External")
    field(TWST,"Data")
    field(THST,"Software")
    alias("$(P)$(R)$(ACQ_NAME)TriggerType-Sts")
}

record(mbbo, "$(P)$(R)$(ACQ_NAME)TriggerEvent-Sel"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set acquisition's trigger event")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_EVENT")
    field(SCAN,"Passive")
    field(NOBT,"2")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(ZRST,"Start")
    field(ONST,"Stop")
    field(TWST,"Abort")
    alias("$(P)$(R)$(ACQ_NAME)Ctrl-Sel")
}

record(mbbi, "$(P)$(R)$(ACQ_NAME)TriggerEvent-Sts"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get acquisition's trigger event")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_EVENT")
    field(SCAN,"I/O Intr")
    field(NOBT,"2")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(ZRST,"Start")
    field(ONST,"Stop")
    field(TWST,"Abort")
    alias("$(P)$(R)$(ACQ_NAME)Ctrl-Sts")
}

record(mbbo, "$(P)$(R)$(ACQ_NAME)TriggerRep-Sel"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set acquisition's trigger repetitive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_REP")
    field(SCAN,"Passive")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"normal")
    field(ONST,"repetitive")
}

record(mbbi, "$(P)$(R)$(ACQ_NAME)TriggerRep-Sts"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get acquisition's trigger repetitive")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_REP")
    field(SCAN,"I/O Intr")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"normal")
    field(ONST,"repetitive")
}

record(longout,"$(P)$(R)$(ACQ_NAME)TriggerDataThres-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set data trigger threshold")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_THRES")
}

record(longin,"$(P)$(R)$(ACQ_NAME)TriggerDataThres-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get data trigger threshold")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_THRES")
}

record(mbbo,"$(P)$(R)$(ACQ_NAME)TriggerDataPol-Sel"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set data trigger polarity")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"positive")
    field(ONST,"negative")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_POL")
}

record(mbbi,"$(P)$(R)$(ACQ_NAME)TriggerDataPol-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get data trigger polarity")
    field(SCAN,"I/O Intr")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"positive")
    field(ONST,"negative")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_POL")
}

record(mbbo,"$(P)$(R)$(ACQ_NAME)TriggerDataSel-Sel"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set data trigger selection")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(NOBT,"5")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(ZRST,"A")
    field(ONST,"B")
    field(TWST,"C")
    field(THST,"D")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_SEL")
}

record(mbbi,"$(P)$(R)$(ACQ_NAME)TriggerDataSel-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get data trigger selection")
    field(SCAN,"I/O Intr")
    field(NOBT,"5")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(ZRST,"A")
    field(ONST,"B")
    field(TWST,"C")
    field(THST,"D")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_SEL")
}

record(longout,"$(P)$(R)$(ACQ_NAME)TriggerDataHyst-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set data trigger hysteresis")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_FILT")
}

record(longin,"$(P)$(R)$(ACQ_NAME)TriggerDataHyst-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get data trigger hysteresis")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_FILT")
}

record(longout,"$(P)$(R)$(ACQ_NAME)TriggerHwDly-SP"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set trigger delay")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_HWDLY")
}

record(longin,"$(P)$(R)$(ACQ_NAME)TriggerHwDly-RB"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get trigger delay")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_HWDLY")
}

record(mbbo,"$(P)$(R)$(ACQ_NAME)DataTrigChan-Sel"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set data-driven trigger channel")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(NOBT,"3")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(FRVL,"4")
    field(FVVL,"5")
    field(SXVL,"6")
    field(ZRST,"ADC")
    field(ONST,"ADCSwap")
    field(TWST,"TbT")
    field(THST,"FOFB")
    field(FRST,"TbTPha")
    field(FVST,"FOFBPha")
    field(SXST,"Monit1")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_DATA_TRIG_CHAN")
    alias("$(P)$(R)$(ACQ_NAME)TriggerDataChan-Sel")
}

record(mbbi,"$(P)$(R)$(ACQ_NAME)DataTrigChan-Sts"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get data-driven trigger channel")
    field(SCAN,"I/O Intr")
    field(NOBT,"3")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(FRVL,"4")
    field(FVVL,"5")
    field(SXVL,"6")
    field(ZRST,"ADC")
    field(ONST,"ADCSwap")
    field(TWST,"TbT")
    field(THST,"FOFB")
    field(FRST,"TbTPha")
    field(FVST,"FOFBPha")
    field(SXST,"Monit1")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_DATA_TRIG_CHAN")
    alias("$(P)$(R)$(ACQ_NAME)TriggerDataChan-Sts")
}

record(mbbi, "$(P)$(R)$(ACQ_NAME)Status-Sts"){
    field(DTYP, "asynInt32")
    field(DESC, "Get acquisition's status")
    field(INP,"@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_STATUS")
    field(SCAN,"I/O Intr")
    field(NOBT,"4")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(FRVL,"4")
    field(FVVL,"5")
    field(SXVL,"6")
    field(SVVL,"7")
    field(EIVL,"8")
    field(NIVL,"9")
    field(TEVL,"10")
    field(ZRST,"Idle")
    field(ONST,"Waiting")
    field(TWST,"External Trig")
    field(THST,"Data Trig")
    field(FRST,"Software Trig")
    field(FVST,"Acquiring")
    field(SXST,"Error")
    field(SVST,"Aborted")
    field(EIST,"Too Many Samples")
    field(NIST,"Too Few Samples")
    field(TEST,"No Memory")
}

record(ao, "$(P)$(R)$(ACQ_NAME)UpdateTime-SP"){
    field(DTYP, "asynFloat64")
    field(DESC, "Set repetitive mode update time")
    field(PINI,"YES")
    field(DRVH,"100000")
    field(DRVL,"0.001")
    field(HOPR,"100000")
    field(LOPR,"0.001")
    field(PREC,"3")
    field(OUT,"@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_UPDATE_TIME")
    field(SCAN,"Passive")
    field(EGU, "s")
}

record(ai, "$(P)$(R)$(ACQ_NAME)UpdateTime-RB"){
    field(DTYP, "asynFloat64")
    field(DESC, "Get repetitive mode update time")
    field(PREC,"3")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_UPDATE_TIME")
    field(EGU, "s")
}
