#########################
# Waveform Acquisition parameters
#########################

record(longout,"$(P)-$(BPM_NUMBER):ACQ:samplesPre"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Set number of pre samples for waveforms")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_SAMPLES_PRE")
}

record(longin,"$(P)-$(BPM_NUMBER):ACQ:samplesPre_RBV"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Get number of pre samples for waveforms")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_SAMPLES_PRE")
}

record(longout,"$(P)-$(BPM_NUMBER):ACQ:samplesPost"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Set number of post samples for waveforms")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_SAMPLES_POST")
}

record(longin,"$(P)-$(BPM_NUMBER):ACQ:samplesPost_RBV"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Get number of post samples for waveforms")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_SAMPLES_POST")
}

record(longout,"$(P)-$(BPM_NUMBER):ACQ:shots"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Set number of shots for waveforms")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_NUM_SHOTS")
}

record(longin,"$(P)-$(BPM_NUMBER):ACQ:shots_RBV"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"Get number of shots for waveforms")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_NUM_SHOTS")
}

record(mbbo, "$(P)-$(BPM_NUMBER):ACQ:channel"){
    field(DTYP, "asynInt32")
    field(DESC, "Set acquisition's channel")
    field(PINI,"YES")
    field(OUT,"@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_CHANNEL")
    field(SCAN,"Passive")
    field(NOBT,"2")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(ZRST,"adc")
    field(ONST,"adcswap")
    field(TWST,"tbt")
    field(THST,"fofb")
}

record(mbbi, "$(P)-$(BPM_NUMBER):ACQ:channel_RBV"){
    field(DTYP, "asynInt32")
    field(DESC, "Get acquisition's channel")
    field(INP,"@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_CHANNEL")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(NOBT,"2")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(ZRST,"adc")
    field(ONST,"adcswap")
    field(TWST,"tbt")
    field(THST,"fofb")
}

record(mbbo, "$(P)-$(BPM_NUMBER):ACQ:trigger"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set acquisition's trigger")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER")
    field(SCAN,"Passive")
    field(NOBT,"3")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(FRVL,"4")
    field(FVVL,"5")
    field(ZRST,"now")
    field(ONST,"external")
    field(TWST,"data")
    field(THST,"sw")
    field(FRST,"stop")
    field(FVST,"repetitive")
}

record(mbbi, "$(P)-$(BPM_NUMBER):ACQ:trigger_RBV"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get acquisition's trigger")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER")
    field(SCAN,"I/O Intr")
    field(NOBT,"3")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(FRVL,"4")
    field(FVVL,"5")
    field(ZRST,"now")
    field(ONST,"external")
    field(TWST,"data")
    field(THST,"sw")
    field(FRST,"stop")
    field(FVST,"repetitive")
}

record(mbbo, "$(P)-$(BPM_NUMBER):ACQ:control"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Set acquisition control")
    field(PINI,"YES")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_CONTROL")
    field(SCAN,"Passive")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"unchanged")
    field(ONST,"abort")
}

record(mbbi, "$(P)-$(BPM_NUMBER):ACQ:control_RBV"){
    field(DTYP, "asynUInt32Digital")
    field(DESC, "Get acquisition control")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_CONTROL")
    field(SCAN,"I/O Intr")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"unchanged")
    field(ONST,"abort")
}

record(longout,"$(P)-$(BPM_NUMBER):ACQ:triggerDataThres"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set data trigger threshold")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_THRES")
}

record(longin,"$(P)-$(BPM_NUMBER):ACQ:triggerDataThres_RBV"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get data trigger threshold")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_THRES")
}

record(mbbo,"$(P)-$(BPM_NUMBER):ACQ:triggerDataPol"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set data trigger polarity")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"positive")
    field(ONST,"negative")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_POL")
}

record(mbbi,"$(P)-$(BPM_NUMBER):ACQ:triggerDataPol_RBV"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get data trigger polarity")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"positive")
    field(ONST,"negative")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_POL")
}

record(longout,"$(P)-$(BPM_NUMBER):ACQ:triggerDataSel"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set data trigger selection")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_SEL")
}

record(longin,"$(P)-$(BPM_NUMBER):ACQ:triggerDataSel_RBV"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get data trigger selection")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_SEL")
}

record(longout,"$(P)-$(BPM_NUMBER):ACQ:triggerDataHyst"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set data trigger hysteresis")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_FILT")
}

record(longin,"$(P)-$(BPM_NUMBER):ACQ:triggerDataHyst_RBV"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get data trigger hysteresis")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_FILT")
}

record(longout,"$(P)-$(BPM_NUMBER):ACQ:triggerHwDly"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set trigger delay")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_HWDLY")
}

record(longin,"$(P)-$(BPM_NUMBER):ACQ:triggerHwDly_RBV"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get trigger delay")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_TRIGGER_HWDLY")
}

record(mbbo,"$(P)-$(BPM_NUMBER):ACQ:dataTrigChan"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"set data-driven trigger channel")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(NOBT,"2")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(ZRST,"adc")
    field(ONST,"adcswap")
    field(TWST,"tbt")
    field(THST,"fofb")
    field(OUT,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_DATA_TRIG_CHAN")
}

record(mbbi,"$(P)-$(BPM_NUMBER):ACQ:dataTrigChan_RBV"){
    field(DTYP,"asynUInt32Digital")
    field(DESC,"get data-driven trigger channel")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(NOBT,"2")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(ZRST,"adc")
    field(ONST,"adcswap")
    field(TWST,"tbt")
    field(THST,"fofb")
    field(INP,"@asynMask($(PORT),$(ADDR),0xFFFFFFFF,$(TIMEOUT))ACQ_DATA_TRIG_CHAN")
}

record(mbbi, "$(P)-$(BPM_NUMBER):ACQ:status_RBV"){
    field(DTYP, "asynInt32")
    field(DESC, "Get acquisition's status")
    field(INP,"@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_STATUS")
    field(SCAN,"I/O Intr")
    field(NOBT,"3")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(FRVL,"4")
    field(FVVL,"5")
    field(SXVL,"6")
    field(SVVL,"7")
    field(ZRST,"Idle")
    field(ONST,"Waiting")
    field(TWST,"External Trig")
    field(THST,"Data Trig")
    field(FRST,"Software Trig")
    field(FVST,"Acquire")
    field(SXST,"Error")
    field(SVST,"Aborted")
}

record(ao, "$(P)-$(BPM_NUMBER):ACQ:updateTime"){
    field(DTYP, "asynFloat64")
    field(DESC, "Set repetitive mode update time")
    field(PINI,"YES")
    field(OUT,"@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_UPDATE_TIME")
    field(SCAN,"Passive")
    field(EGU, "s")
}

record(ai, "$(P)-$(BPM_NUMBER):ACQ:updateTime_RBV"){
    field(DTYP, "asynFloat64")
    field(DESC, "Get repetitive mode update time")
    field(PINI,"YES")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_UPDATE_TIME")
    field(EGU, "s")
}
